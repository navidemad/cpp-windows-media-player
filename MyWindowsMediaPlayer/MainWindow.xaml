<Window x:Class="MyWindowsMediaPlayer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        Title="MyWindowsMediaPlayer" Height="768" Width="1024">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="500"></ColumnDefinition>
            <ColumnDefinition Width="1*"></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <TabControl Grid.Row="0" Grid.Column="0" HorizontalAlignment="Left" Margin="10" VerticalAlignment="Stretch" Width="475">
            <TabItem Header="Playlists" Height="23" VerticalAlignment="Bottom">
                <Grid Background="#FFE5E5E5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"></RowDefinition>
                        <RowDefinition Height="28"></RowDefinition>
                    </Grid.RowDefinitions>
                    <DataGrid Grid.Row="0" SelectedItem="{ Binding PlayListViewModel.CurrentPlaylist }" ItemsSource="{ Binding PlayListViewModel.Playlists }" AutoGenerateColumns="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn IsReadOnly="True" Binding="{ Binding Name }" Header="Fichier" />
                            <DataGridTextColumn IsReadOnly="True" Binding="{ Binding ModificationDate, StringFormat=HH:mm dd/MM/yyyy }" Header="Date" />
                        </DataGrid.Columns>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction Command="{ Binding MediaViewModel.SelectPlaylistCommand }" CommandParameter="{ Binding PlayListViewModel.CurrentPlaylist }" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </DataGrid>
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"></ColumnDefinition>
                            <ColumnDefinition Width="1*"></ColumnDefinition>
                            <ColumnDefinition Width="1*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>

                        <Button Grid.Column="0" Command="{ Binding PlayListViewModel.Add }" FontWeight="Bold" Foreground="White" Background="DodgerBlue" Content="Créer"/>
                        <Button Grid.Column="1" Command="{ Binding PlayListViewModel.Edit }" CommandParameter="{ Binding PlayListViewModel.CurrentPlaylist }" FontWeight="Bold" Foreground="White" Background="DodgerBlue" Content="Editer" />
                        <Button Grid.Column="2" Command="{ Binding PlayListViewModel.Delete }" CommandParameter="{ Binding PlayListViewModel.CurrentPlaylist }" FontWeight="Bold" Foreground="White" Background="DarkRed" Content="Supprimer" />
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="Photos">
                <Grid Background="#FFE5E5E5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"></RowDefinition>
                        <RowDefinition Height="28"></RowDefinition>
                    </Grid.RowDefinitions>
                    <DataGrid Grid.Row="0" SelectedItem="{ Binding PictureViewModel.CurrentPicture }" ItemsSource="{ Binding PictureViewModel.Pictures }" AutoGenerateColumns="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn IsReadOnly="True" Binding="{ Binding Name }" Header="Fichier" />
                            <DataGridTextColumn IsReadOnly="True" Binding="{ Binding ModificationDate, StringFormat=HH:mm dd/MM/yyyy }" Header="Date" />
                        </DataGrid.Columns>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction Command="{ Binding MediaViewModel.SelectMediaCommand }" CommandParameter="{ Binding PictureViewModel.CurrentPicture }" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </DataGrid>
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"></ColumnDefinition>
                            <ColumnDefinition Width="1*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>

                        <Button Grid.Column="0" Command="{ Binding PictureViewModel.Add }" FontWeight="Bold" Foreground="White" Background="DodgerBlue" Content="Ajouter"/>
                        <Button Grid.Column="1" Command="{ Binding PictureViewModel.Delete }" CommandParameter="{ Binding PictureViewModel.CurrentPicture }" FontWeight="Bold" Foreground="White" Background="DarkRed" Content="Supprimer" />
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="Videos">
                <Grid Background="#FFE5E5E5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"></RowDefinition>
                        <RowDefinition Height="28"></RowDefinition>
                    </Grid.RowDefinitions>
                    <DataGrid Grid.Row="0" SelectedItem="{ Binding VideoViewModel.CurrentVideo }" ItemsSource="{ Binding VideoViewModel.Videos }" AutoGenerateColumns="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn IsReadOnly="True" Binding="{ Binding Name }" Header="Fichier" />
                            <DataGridTextColumn IsReadOnly="True" Binding="{ Binding ModificationDate, StringFormat=HH:mm dd/MM/yyyy }" Header="Date" />
                        </DataGrid.Columns>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction Command="{ Binding MediaViewModel.SelectMediaCommand }" CommandParameter="{ Binding VideoViewModel.CurrentVideo }" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </DataGrid>
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"></ColumnDefinition>
                            <ColumnDefinition Width="1*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>

                        <Button Grid.Column="0" Command="{ Binding VideoViewModel.Add }" FontWeight="Bold" Foreground="White" Background="DodgerBlue" Content="Ajouter"/>
                        <Button Grid.Column="1" Command="{ Binding VideoViewModel.Delete }" CommandParameter="{ Binding VideoViewModel.CurrentVideo }" FontWeight="Bold" Foreground="White" Background="DarkRed" Content="Supprimer" />
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="Musique">
                <Grid Background="#FFE5E5E5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"></RowDefinition>
                        <RowDefinition Height="28"></RowDefinition>
                    </Grid.RowDefinitions>
                    <DataGrid Grid.Row="0" SelectedItem="{ Binding MusicViewModel.CurrentMusic }" ItemsSource="{ Binding MusicViewModel.Musics }" AutoGenerateColumns="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn IsReadOnly="True" Binding="{ Binding Name }" Header="Fichier" />
                            <DataGridTextColumn IsReadOnly="True" Binding="{ Binding Title }" Header="Titre" />
                            <DataGridTextColumn IsReadOnly="True" Binding="{ Binding Artists }" Header="Artiste" />
                            <DataGridTextColumn IsReadOnly="True" Binding="{ Binding Album }" Header="Album" />
                            <DataGridTextColumn IsReadOnly="True" Binding="{ Binding ModificationDate, StringFormat=HH:mm dd/MM/yyyy }" Header="Date" />
                        </DataGrid.Columns>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction Command="{ Binding MediaViewModel.SelectMediaCommand }" CommandParameter="{ Binding MusicViewModel.CurrentMusic }" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </DataGrid>
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"></ColumnDefinition>
                            <ColumnDefinition Width="1*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>

                        <Button Grid.Column="0" Command="{ Binding MusicViewModel.Add }" FontWeight="Bold" Foreground="White" Background="DodgerBlue" Content="Ajouter"/>
                        <Button Grid.Column="1" Command="{ Binding MusicViewModel.Delete }" CommandParameter="{ Binding MusicViewModel.CurrentMusic }" FontWeight="Bold" Foreground="White" Background="DarkRed" Content="Supprimer" />
                    </Grid>
                </Grid>
            </TabItem>
        </TabControl>

        <Grid Grid.Row="0" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="40"></RowDefinition>
                <RowDefinition Height="1*"></RowDefinition>
                <RowDefinition Height="80"></RowDefinition>
                <RowDefinition Height="25"></RowDefinition>
                <RowDefinition Height="25"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <TextBlock Text="{ Binding MediaViewModel.CurrentMediaName }" FontWeight="Bold" Foreground="DodgerBlue" TextAlignment="Center" HorizontalAlignment="Center" Margin="10" TextWrapping="Wrap" VerticalAlignment="Top" Grid.Row="0" Grid.Column="0" />
            <ContentControl Grid.Row="1" Grid.Column="0" Margin="10" Content="{ Binding MediaViewModel.MediaElement }"/>
            <ContentControl Grid.Row="1" Grid.Column="0" Margin="10" Content="{ Binding MediaViewModel.Image }"/>
            
            <Grid Grid.Row="2" Grid.Column="0" Margin="10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"></ColumnDefinition>
                    <ColumnDefinition Width="1*"></ColumnDefinition>
                    <ColumnDefinition Width="1*"></ColumnDefinition>
                    <ColumnDefinition Width="1*"></ColumnDefinition>
                    <ColumnDefinition Width="1*"></ColumnDefinition>
                    <ColumnDefinition Width="1*"></ColumnDefinition>
                    <ColumnDefinition Width="1*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" Grid.Row="0" Command="{ Binding MediaViewModel.SpeedDownMediaCommand }">
                    <Image Source="{ Binding MediaViewModel.SpeedDownIcon }"/>
                </Button>
                <Button Grid.Column="1" Grid.Row="0" Command="{ Binding MediaViewModel.PrevMediaCommand }">
                    <Image Source="{ Binding MediaViewModel.PrevIcon }"/>
                </Button>
                <Button Grid.Column="2" Grid.Row="0" Command="{ Binding MediaViewModel.PlayMediaCommand }" CommandParameter="{ Binding MediaViewModel.IsPlayingMedia }" >
                    <Image Source="{ Binding MediaViewModel.PlayIcon }"/>
                </Button>
                <Button Grid.Column="3" Grid.Row="0" Command="{ Binding MediaViewModel.PauseMediaCommand }" CommandParameter="{ Binding MediaViewModel.IsPlayingMedia }" >
                    <Image Source="{ Binding MediaViewModel.PauseIcon }" />
                </Button>
                <Button Grid.Column="4" Grid.Row="0" Command="{ Binding MediaViewModel.StopMediaCommand }" CommandParameter="{ Binding MediaViewModel.IsPlayingMedia }" >
                    <Image Source="{ Binding MediaViewModel.StopIcon }" />
                </Button>
                <Button Grid.Column="5" Grid.Row="0" Command="{ Binding MediaViewModel.NextMediaCommand }">
                    <Image Source="{ Binding MediaViewModel.NextIcon }" />
                </Button>
                <Button Grid.Column="6" Grid.Row="0" Command="{ Binding MediaViewModel.SpeedUpMediaCommand }">
                    <Image Source="{ Binding MediaViewModel.SpeedUpIcon }" />
                </Button>
            </Grid>
            <Grid Grid.Row="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"></ColumnDefinition>
                    <ColumnDefinition Width="5"></ColumnDefinition>
                    <ColumnDefinition Width="25"></ColumnDefinition>
                    <ColumnDefinition Width="5"></ColumnDefinition>
                    <ColumnDefinition Width="25"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Slider Grid.Column="0" Minimum="0" Maximum="{ Binding MediaViewModel.MediaElement.MaxDuration }" Value="{ Binding MediaViewModel.MediaElement.CurrentTime }" />
                <TextBlock Grid.Column="2" Text="{ Binding MediaViewModel.MediaElement.CurrentTime }" />
                <TextBlock Grid.Column="4" Text="{ Binding MediaViewModel.MediaElement.MaxDuration }" />
            </Grid>
            <Slider Grid.Row="4" Minimum="0" Maximum="1" Value="{ Binding MediaViewModel.MediaElement.Volume }" />
        </Grid>
    </Grid>
</Window>
