<UserControl x:Class="MyWindowsMediaPlayer.View.Playlists"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
      mc:Ignorable="d" 
      d:DesignHeight="400" d:DesignWidth="300">

    <UserControl.Resources>
        <Style x:Key="Flat">
            <Setter Property="Control.Margin" Value="3" />
            <Setter Property="Control.BorderThickness" Value="1" />
            <Setter Property="Control.BorderBrush" Value="#888a90"/>
            <Setter Property="Control.Background" Value="#242424" />
            <Setter Property="Control.Foreground" Value="#d8d6d6" />
            <Style.Triggers>
                <Trigger Property="Control.IsMouseOver" Value="True">
                    <!-- btn hovered -->
                </Trigger>
                <Trigger Property="Control.IsFocused" Value="True">
                    <!-- btn selected -->
                </Trigger>
                <Trigger Property="Control.IsEnabled" Value="False">
                    <!-- btn disabled -->
                    <Setter Property="Control.Opacity" Value="0.3" />
                </Trigger>
                <Trigger Property="Control.IsEnabled" Value="True">
                    <!-- btn enabled -->
                </Trigger>
            </Style.Triggers>
        </Style>

        <SolidColorBrush x:Key="GotFocusColor" Color="Green" />
        <SolidColorBrush x:Key="LostFocusColor" Color="Transparent" />

        <Style TargetType="{ x:Type DataGridColumnHeader }">
            <Setter Property="Foreground" Value="#FFB3B3B3"/>
            <Setter Property="Background" Value="#FF262626"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="Padding" Value="8,5,5,5" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="ToolTip" Value="Cliquez pour Trier"/>
                    <Setter Property="TextElement.Cursor" Value="Hand"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type DataGridRow}">
            <Setter Property="Foreground" Value="#FFB3B3B3"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="BorderThickness" Value="0,1,0,0"/>
            <Setter Property="BorderBrush" Value="#888a90"/>
            <Style.Triggers>
                <Trigger Property="AlternationIndex" Value="0">
                    <Setter Property="Background" Value="#383838"/>
                </Trigger>
                <Trigger Property="AlternationIndex" Value="1">
                    <Setter Property="Background" Value="#464646"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"></RowDefinition>
            <RowDefinition Height="28"></RowDefinition>
            <RowDefinition Height="28"></RowDefinition>
        </Grid.RowDefinitions>

        <DataGrid AlternationCount="2" BorderThickness="0" Background="#FF383838" RowHeaderWidth="0" Grid.Row="0" SelectedItem="{ Binding ViewModel.CurrentPlaylist }" ItemsSource="{ Binding ViewModel.Playlists }" AutoGenerateColumns="False">
            <DataGrid.Columns>
                <DataGridTextColumn IsReadOnly="True" Binding="{ Binding Name }" Header="Fichier" Width="*" />
                <DataGridTextColumn IsReadOnly="True" Binding="{ Binding ModificationDate, StringFormat=HH:mm dd/MM/yyyy }" Header="Date" Width="*" />
            </DataGrid.Columns>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <i:InvokeCommandAction Command="{ Binding MediaViewModel.SelectPlaylistCommand }" CommandParameter="{ Binding ViewModel.CurrentPlaylist }" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </DataGrid>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" SharedSizeGroup="Label"/>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Label Grid.Column="0" Style="{StaticResource Flat}" TextElement.FontSize="10" Control.Margin="2">Nom de la playlist:</Label>
            <TextBox Grid.Column="1" Style="{StaticResource Flat}" Text="{ Binding ViewModel.NamePlaylist, UpdateSourceTrigger=PropertyChanged }" />
            <Button Style="{StaticResource Flat}" Grid.Column="2" Command="{ Binding ViewModel.Add }" Content="Créer" Background="#1e5389" />
            <Button Style="{StaticResource Flat}" Grid.Column="3" Command="{ Binding ViewModel.Edit }" CommandParameter="{ Binding ViewModel.CurrentPlaylist }" Content="Mettre à jour" Background="#1e8941" />
            <Button Style="{StaticResource Flat}" Grid.Column="4" Command="{ Binding ViewModel.Delete }" CommandParameter="{ Binding ViewModel.CurrentPlaylist }" Content="Retirer" Background="#891e1e" />
        </Grid>
        
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" SharedSizeGroup="Label"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Label Grid.Column="0" Style="{StaticResource Flat}" TextElement.FontSize="10" Control.Margin="2">Search:</Label>
            <TextBox Grid.Column="1" Style="{StaticResource Flat}" Text="{ Binding ViewModel.SearchByText, UpdateSourceTrigger=PropertyChanged }" />
        </Grid>
        
    </Grid>

</UserControl>
