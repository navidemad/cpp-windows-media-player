<UserControl x:Class="MyWindowsMediaPlayer.View.Pictures"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
      mc:Ignorable="d" 
      d:DesignHeight="400" d:DesignWidth="300">

    <UserControl.Resources>
        <Style x:Key="Flat">
            <Setter Property="Control.Background" Value="{x:Null}" />
            <Setter Property="Control.BorderBrush" Value="{x:Null}" />
            <Style.Triggers>
                <Trigger Property="Control.IsMouseOver" Value="True">
                    <Setter Property="Control.Background" Value="{x:Null}" />
                    <Setter Property="Control.BorderBrush" Value="{x:Null}" />
                    <Setter Property="Control.FontWeight" Value="Bold" />
                </Trigger>
                <Trigger Property="Control.IsFocused" Value="True">
                    <Setter Property="Control.FontWeight" Value="Bold" />
                </Trigger>
                <Trigger Property="Control.IsEnabled" Value="False">
                    <Setter Property="Control.Foreground" Value="Gray" />
                </Trigger>
                <Trigger Property="Control.IsEnabled" Value="True">
                    <Setter Property="Control.Foreground" Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <SolidColorBrush x:Key="GotFocusColor" Color="Green" />
        <SolidColorBrush x:Key="LostFocusColor" Color="Transparent" />

        <Style TargetType="{ x:Type DataGridColumnHeader }">
            <Setter Property="Foreground" Value="#FFB3B3B3"/>
            <Setter Property="Background" Value="#FF262626"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
        </Style>

        <Style TargetType="{x:Type DataGridRow}">
            <Setter Property="Foreground" Value="#FFB3B3B3"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Background" Value="#FF383838"/>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"></RowDefinition>
            <RowDefinition Height="5"></RowDefinition>
            <RowDefinition Height="28"></RowDefinition>
            <RowDefinition Height="28"></RowDefinition>
            <RowDefinition Height="28"></RowDefinition>
        </Grid.RowDefinitions>
        <DataGrid Background="#FF383838" RowHeaderWidth="0" Grid.Row="0" SelectedItem="{ Binding ViewModel.CurrentPicture }" ItemsSource="{ Binding ViewModel.Pictures }" AutoGenerateColumns="False" AllowDrop="True" Drop="OnDrop">
            <DataGrid.Columns>
                <DataGridTextColumn IsReadOnly="True" Binding="{ Binding Name }" Header="Fichier" Width="*" />
                <DataGridTextColumn IsReadOnly="True" Binding="{ Binding ModificationDate, StringFormat=HH:mm dd/MM/yyyy }" Header="Date" Width="*" />
            </DataGrid.Columns>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <i:InvokeCommandAction Command="{ Binding MediaViewModel.SelectMediaCommand }" CommandParameter="{ Binding ViewModel.CurrentPicture }" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </DataGrid>

        <TextBox Grid.Row="2" CaretBrush="White" Foreground="White" FontWeight="Bold" Background="Transparent" Text="{ Binding ViewModel.LinkInput, UpdateSourceTrigger=PropertyChanged }" />
        <TextBox Grid.Row="3" CaretBrush="White" Foreground="White" FontWeight="Bold" Background="Transparent" Text="{ Binding ViewModel.SearchByText, UpdateSourceTrigger=PropertyChanged }" />

        <Grid Grid.Row="4">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"></ColumnDefinition>
                <ColumnDefinition Width="1*"></ColumnDefinition>
                <ColumnDefinition Width="1*"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <Button Style="{StaticResource Flat}" Grid.Column="0" Command="{ Binding ViewModel.AddLink }" CommandParameter="{ Binding ViewModel.LinkInput }" FontWeight="Bold" Content="Ajouter le lien" Background="SteelBlue" />
            <Button Style="{StaticResource Flat}" Grid.Column="1" Command="{ Binding ViewModel.AddFile }" FontWeight="Bold" Content="Ajouter un fichier" Background="SteelBlue" />
            <Button Style="{StaticResource Flat}" Grid.Column="2" Command="{ Binding ViewModel.Delete }" CommandParameter="{ Binding ViewModel.CurrentPicture }" FontWeight="Bold" Content="Supprimer" Background="DarkRed"  />
        </Grid>
    </Grid>

</UserControl>
